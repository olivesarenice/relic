version: '3.7'

services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - local-network

  db-init:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./core/ingress/Dockerfile
    command: sh -c "uv run python devtools/init_db.py --host $$POSTGRES_HOST"
    depends_on:
      - postgres
    networks:
      - local-network

  ingress:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./core/ingress/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
      - db-init
    networks:
      - local-network

  collector-webapp:
    build:
      context: ./collectors/webapp
      dockerfile: ./Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - redis
      - ingress
    networks:
      - local-network

  # neo4j:
  #   image: neo4j
  #   healthcheck:
  #     test: "wget -qO- http://localhost:7474 || exit 1"
  #     interval: 1s
  #     timeout: 10s
  #     retries: 10
  #     start_period: 3s
  #   ports:
  #     - "7474:7474" 
  #     - "${NEO4J_BOLT_PORT:-7687}:${NEO4J_BOLT_PORT:-7687}" # Bolt
  #   volumes:
  #     - ./core/stores/data/neo4j:/data
  #   environment:
  #     - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
  #   networks:
  #     - local-network

  pipeline:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./core/pipeline/Dockerfile
    depends_on:
      - redis
      - postgres
    networks:
      - local-network

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/posgresql/data
    ports:
      - "5432:5432"
    networks:
      - local-network

networks:
  local-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
